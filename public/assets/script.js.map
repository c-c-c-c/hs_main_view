{"version":3,"sources":["../../src/script/script.js"],"names":["vm","Vue","el","data","count","methods","countUp","changeRotateSpeed","vm_stop","hsStop","Speed_0","howManySpinners","scene","THREE","Scene","box","controls","renderer","camera","model","model2","model3","rotate_speed","r_radian","c_radian","geometry","material","renderHandSpinner","light","ambient","gridHelper","axisHelper","lightHelp","width","height","modelPath","scale_hs","DirectionalLight","position","set","add","AmbientLight","PerspectiveCamera","lookAt","OrbitControls","autoRotate","autoRotateSpeed","WebGLRenderer","antialias","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","document","getElementById","appendChild","domElement","modelPath1","modelPath2","modelPath3","loader","JSONLoader","load","geo","mat","i","phongMat","MeshPhongMaterial","Mesh","randX","Math","random","randY","randZ","randColor","floor","scale","color","Color","opacity","transparent","render","addSpinner","size","console","log","requestAnimationFrame","rotation","y","sin","cameraZ","update"],"mappings":"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","file":"script.js","sourcesContent":["var vm = new Vue({\n  el: '#mycounter',\n  data: {\n    count: 0\n  },\n  methods: {\n    countUp: function() {\n            this.count++;\n            changeRotateSpeed ();\n      }\n  }\n});\n\nvar vm_stop = new Vue({\n  el: '#mystop',\n  methods: {\n    hsStop: function() {\n            Speed_0();\n    }\n  }\n});\n\nlet howManySpinners = 50;\nlet scene = new THREE.Scene();\nlet box;\nlet controls;\nlet renderer;\nlet camera;\nlet model = [];\n//let model = {};\nlet model2 = {};\nlet model3 = {};\nlet rotate_speed = 0.05;\nlet r_radian = 0;\nlet c_radian = 0;\nlet geometry;\nlet material;\n\nfunction renderHandSpinner () {\n  'use strict';\n  let light;\n  let ambient;\n  let gridHelper;\n\tlet axisHelper;\n  let lightHelp;\n  let width = 1000;\n  let height = 1000;\n\tlet modelPath ;\n\tlet scale_hs;\n\n   //light\n  light = new THREE.DirectionalLight(0xffffff, 1);\n  light.position.set(0, 200, 80);\n  scene.add(light);\n  ambient = new THREE.AmbientLight(0x404040);\n  scene.add(ambient);\n\n\t//camera\n  camera = new THREE.PerspectiveCamera(30, width /　height, 1 , 1000);\n  camera.position.set(0, 400, 300);\n  camera.lookAt(scene.position);\n\n  // helper 現在は非表示\n  //gridHelper = new THREE.GridHelper(200, 50);\n  //scene.add(gridHelper);\n  // axisHelper = new THREE.AxisHelper(1000);\n  // scene.add(axisHelper);\n  //lightHelper = new THREE.DirectionalLightHelper(light , 20)\n  //scene.add(lightHelper);\n\n  //controls\n  controls = new THREE.OrbitControls(camera);\n  //cameraの自動回転\n  controls.autoRotate = true;\n  controls.autoRotateSpeed = 1.5;\n\n  // renderer\n  renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setSize(width, height);\n  renderer.setClearColor(0xffffff);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  document.getElementById('stage').appendChild(renderer.domElement);\n\n\t//modelPath = 'src/bear.json';\n\t//modelPath = 'src/handspiner_3d.json';\n  //modelPath = '../src/data/handspiner_3d_geo.json';\n  let modelPath1 = './src/data/handspiner_3d_geo.json';\n  let modelPath2 = './src/data/hs3.json';\n  //modelPath = './src/data/hs4.json';\n  //modelPath = './src/data/hs5.json';\n  let modelPath3 = './src/data/hs6.json';\n\n\t　　　\n\t    //let phongMat = new THREE.MeshPhongMaterial(mat);\n\t    //let phongMat2 = new THREE.MeshPhongMaterial(mat);\n\t    //let phongMat3 = new THREE.MeshPhongMaterial(mat);\n\t    //for (let mt of faceMat.materials) {\n\t    //  mt.color = new THREE.Color(0xffcc88);\n\t  \t//}\n\n\n\tlet loader = new THREE.JSONLoader();　　\n\n\t//for (let j=0; j < 3; j++) {\n\n\t\t// if (j % 3 == 0 ) {\n\t\t// \t\tmodelPath = modelPath1;\n\t\t// \t\tscale_hs = 100;\n\t\t// } else if ( j % 3 == 1) {\n\t\t// \t\tmodelPath = modelPath2;\n\t\t// \t\tscale_hs = 100;\n\t\t// } else {\n\t\t// \t\tmodelPath = modelPath3;\n\t\t// \t\tscale_hs = 0.7;\n\t\t// }\n\n\t\tmodelPath = modelPath3;\n\n\t\tloader.load(modelPath, function(geo, mat) {\n\t\t\tgeometry = geo;\n\t\t\tmaterial = mat;\n\n\t\t\tfor (let i=0; i < howManySpinners; i++ ) {\n\t\t    let phongMat = new THREE.MeshPhongMaterial(mat);\n\t\t    model[i] = new THREE.Mesh(geo, phongMat);\n\n\t\t\t\tlet randX = 300 * Math.random()-150;\n\t\t\t\tlet randY = 400 * Math.random()-250;\n\t\t\t\tlet randZ = 600 * Math.random()-300;\n\n\t\t    if (i==0) {\n\t\t\t\t\tmodel[i].position.set(0, 20, 0);\n\t\t\t\t} else {\n\t\t\t\t\tmodel[i].position.set(randX, randY, randZ);\n\t\t\t\t}　　\n\n\t\t    \t　\n\t\t    \t//let randColor = Math.random() * 0xffffff ;\n\t\t    \t//let randColor = Math.random() * 61184  + 256;\n\t\t    \t//let randColor =  Math.floor(Math.random() * 61184) + 256;\n\t\t    \t//let randColor =  41100 + 256;\n\t\t    let randColor =  256 * Math.floor(Math.random() * 156) + 255 + 25600;\n\t\t    if (i % 2 == 0 ) {\n\t\t\t\t\trandColor =  256 * Math.floor(Math.random() * 156) + 200 + 25600;\n\t\t\t\t}\n\n\t\t\t\tif (i % 4 == 0 ) {\n\t\t\t\t\trandColor =  0x666666;\n\t\t\t\t} else if(i%4==1) {\n\t\t\t\t\trandColor = 0xcccccc;\n\t\t\t\t} else if(i % 4==2) {\n\t\t\t\t\trandColor = 0xaaaaaa;\n\t\t\t\t} else {\n\t\t\t\t\trandColor = 0x888888;\n\t\t\t\t}\n\n\n\n\t\t\t\t//model[i].scale.set(scale, scale, scale);\n\t\t\t\tmodel[i].scale.set(10, 10, 10);\n\t\t\t\tmodel[i].material.color = new THREE.Color(randColor);\n\t\t\t\tmodel[i].material.opacity = 0.5 * Math.random()+0.3;\n\t\t\t\tmodel[i].material.transparent = true;\n\t\t\t\tscene.add(model[i]);　　　\n\t\t\t}\n\t\t\trender();\n\t\t});\n  //}\n\n\t　\n}\n\nfunction addSpinner () {\n  let phongMat = new THREE.MeshPhongMaterial(material);\n  model = new THREE.Mesh(geometry, phongMat);\n\tlet randX = 800 * Math.random();\n\tlet randY = 800 * Math.random();\n\tlet randZ = 800 * Math.random();\n\n  let size = Math.random();\n\tmodel.scale.set(size, size, size);　　　\n  model.position.set(randX, randY, randZ);\n\tlet randColor = Math.random() * 0xffffff;　　　\n\tmodel.material.color = new THREE.Color(randColor);\n\tscene.add(model);　\n}\n\nfunction render () {\n\tconsole.log(\"coming\");\n\n  requestAnimationFrame(render);\n  r_radian += 0.01;\n\n\tfor (let i=0; i < howManySpinners; i++ ) {\n  \tmodel[i].rotation.y += rotate_speed;\n    model[i].position.y += (Math.sin(r_radian) - Math.sin(r_radian-0.01))*150 ;\n\n\t}\n\n\tc_radian += 0.007;\n  let cameraZ = 150 * (Math.sin(c_radian)) +150;\n // let cameraZ = 0;\n\tcamera.position.set(0, 600, cameraZ);\n\n  controls.update();\n  renderer.render(scene, camera);\n}\n\nfunction changeRotateSpeed () {\n  //controls.autoRotateSpeed = vm.count*10;\n \trotate_speed += vm.count*0.01;\n  for (let i=0 ; i < howManySpinners; i++) {\n\n\t\tmodel[i].rotation.y = 1.8*vm.count;\n  }\n}\n\nfunction Speed_0 () {\n  vm.count = 0;\n  rotate_speed = 0;\n \t//addSpinner();\n}\n\nrenderHandSpinner();\n"]}